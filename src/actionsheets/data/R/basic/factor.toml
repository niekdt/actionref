partial = true
language = "R"
parent = "r.basic"
after = "vector"
name = "factor"
title = "factor"
description = "For representing categorical data with a finite number of options (levels)"


[create]
section = "Create"

[create.vector]
action = "From vector"
code = "factor(x)"

[create.vector.map]
action = "From vector, with renamed levels"
code = "factor(x, levels=1:3, labels=LETTERS[1:3]"

[create.pattern]
action = "Generate by pattern"
code = "gl(5, 2, labels=LETTERS[1:5])"

[create.interaction]
action = "Generate factor of interactions with another"
code = "interaction(f1, f2)"

[create.concat]
action = "Combine factors"
code = "factor(c(as.character(x), as.character(y)), union(levels(x), levels(y)))"


[test]
section = "Test"

[test.is]
action = "Is factor"
code = "is.factor(x)"

[test.contains.value]
action = "Contains value _v_"
code = "v %in% f"

[test.contains.na]
action = "Contains `NA` value (not as level)"
code = "anyNA(f)"

[test.contains.na.level]
action = "Contains `NA` (as `<NA>` level)"
code = "NA %in% f"
details = "`anyNA(f)` does not work!"

[test.contains.level.value]
action = "Contains level named _v_"
code = "v %in% levels(f)"

[test.contains.level.na]
action = "Contains `<NA>` level"
code = "anyNA(levels(f))"


[extract]
section = "Extract"

[extract.levels.count]
action = "Number of levels"
code = "nlevels(f)"

[extract.levels]
action = "Levels"
code = "levels(f)"

[extract.levels.factor]
action = "Levels, as factor, and in order"
code = "factor(levels(f), levels(f))"

[extract.levels.factor.used]
action = "Used levels, as factor, and in order"
code = "sort(unique(f))"
details = "Useful for generating reference categorical newdata for `predict()`"


[derive]
section = "Derive"

[derive.map]
action = "Remap categories / values"
code = """
x = factor(c('a1', 'b1', 'a2', 'c1'))
factor(x, levels=levels(x), labels=c('a', 'a', 'b', 'c'))
"""


[derive.levels]
section = "Alter levels"

[derive.levels.add.na]
action = "Add NA as a factor level"
code = "f = addNA(f)"

[derive.levels.add.na.exists]
action = "Add NA as a factor level if needed (NAs present)"
code = "f = addNA(f, ifany = TRUE)"

[derive.levels.remove]
action = "Drop specific factor levels"
code = "droplevels(f, exclude=X)"

[derive.levels.remove.except]
action = "Drop factor levels except specific"
code = "droplevels(f, except=X)"

[derive.levels.remove.unused]
action = "Drop unused factors levels"
code = "factor(f)"


[derive.shrink]
section = "Shrink"

[derive.shrink.subset.droplevels]
action = "Subset, drop unused levels"
code = "f[1:2, drop=TRUE]"


[derive.grow]
section = "Grow"

[derive.join]
section = "Join"

[derive.join.concat]
action = "Combine factors"
code = "c(x, y)"
details = "Resulting factor has levels that are a union of the original levels"


[convert]
section = "Convert"

[convert.str]
action = "To vector of strings"
code = "as.character(x)"

[convert.int]
action = "To vector of level indices"
code = "as.numeric(x)"

[convert.int.2]
code = "as.integer(x)"

[convert.ordered]
action = "To ordered factor"
code = "as.ordered(x)"
